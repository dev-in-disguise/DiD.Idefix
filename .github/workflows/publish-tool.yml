name: Publish tool

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      SOLUTION_FILE: ./src/DiD.Idefix.sln
      PROJECT_FILE: ./src/DiD.Idefix/DiD.Idefix.csproj

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}
    - name: Get PackageVersion of csproj
      id: get-packageversion
      uses: naminodarie/get-net-sdk-project-versions-action@v1
      with:
        proj-path: ${{ env.PROJECT_FILE }}
    - name: Build
      run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore /p:Version=${{ steps.get-packageversion.outputs.package-version }}
    - name: Pack
      run: dotnet pack --no-build -c Release ${{ env.PROJECT_FILE }} -o .
    - name: Publish to nuget.org
      run: dotnet nuget push *.nupkg -s "https://api.nuget.org/v3/index.json" -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate
    - name: Publish to github packages
      run: dotnet nuget push *.nupkg --api-key "${{ secrets.GH_PACKAGES_TOKEN }}" --source "https://nuget.pkg.github.com/dev-in-disguise/index.json" 
    - name: Apply git tag
      run: |
        git tag ${{ steps.get-packageversion.outputs.package-version }}
        git push origin ${{ steps.get-packageversion.outputs.package-version }}
